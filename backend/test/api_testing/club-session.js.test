module.exports = dependencies => {

  const {app, axios, chai} = dependencies

  describe('Testing independent calls', function(){

    before(async function(){
      this.timeout(10000)
      const url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key='+process.env.FIREBASE_API_KEY
      const body = { email: "example@ucsd.edu", password: "example", returnSecureToken: true }
      this.credential = (await axios.post(url, body)).data.idToken

      this.log = console.log
      console.log = () => {}

      //create the request agent and insert a dummy user that will create all of these requests
      this.agent = chai.request.agent(app)
      const response = await this.agent.post('/api/user/login').send({credential: this.credential})
      
      console.log = this.log
      return 
    })

    after(async function(){
      //create the user
      this.log = console.log
      console.log = () => {}

      const response = await this.agent.delete('/api/user/delete')
      this.agent.close()

      console.log = this.log
      return response
    })

    beforeEach(function(done){
      this.log = console.log
      console.log = () => {}
      done()
    })

    afterEach(function(done){
      console.log = this.log
      done()
    })

    it('creates a new club', function(done){
      const club = {name: 'Example Club'}

      this.agent.post('/api/club/create').send({club}).then(function(res){

        chai.expect(res).to.have.status(200);

        chai.expect(res.body.name).to.eql('Example Club')
        chai.expect(res.body.authorized_users).to.have.lengthOf(1)

        chai.expect(res.body.authorized_users[0].name).to.eql('Example User')

        done()
      }).catch(function(error){
        throw error; 
      });
    })


    it('gets a club by name', function(done){
      const name = 'Example Club'
      this.agent.get('/api/club/get').send({name}).then(function(res){
        chai.expect(res).to.have.status(200);

        chai.expect(res.body.name).to.eql('Example Club')

        done()
      }).catch(function(error){
        throw error; 
      });
    })

    it('gets all clubs', function(done){
      this.agent.get('/api/club/getAll').then(function(res){
        chai.expect(res).to.have.status(200);

        chai.expect(res.body).to.have.lengthOf(1)

        chai.expect(res.body[0].name).to.eql('Example Club')

        chai.expect(res.body[0].authorized_users).to.have.lengthOf(1)

        done()
      }).catch(function(error){
        throw error; 
      });
    })

    it('updates a club', function(done){
      const club = {name: 'New Example Club'}
      const name = 'Example Club'
      this.agent.put('/api/club/update').send({name, club}).then(function(res){
        chai.expect(res).to.have.status(200);

        chai.expect(res.body.name).to.eql(club.name)

        chai.expect(res.body.authorized_users).to.have.lengthOf(1)

        done()
      }).catch(function(error){
        throw error; 
      });
    })

    it('deletes a club', function(done){
      const name = 'New Example Club'
      this.agent.delete('/api/club/delete').send({name}).then(function(res){
        chai.expect(res).to.have.status(200);

        chai.expect(res.body.summary).to.eql('Club deleted')

        done()
      }).catch(function(error){
        throw error; 
      });
    })
/*
    */
  })
}
